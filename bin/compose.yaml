services:
  api:
    build:
      context: ../apilist
      dockerfile: Dockerfile
#    healthcheck:
#      test: ["CMD","curl", "-f", "http://localhost:8080/ip"]
#      interval: 5s
#      retries: 5
#      start_period: 15s
#      timeout: 5s
    deploy:
      replicas: 1
    environment:
      API_VERSION: 9.1.9
      DB_HOST: db
#    env_file:
#      - ../apilist/dev.env
    networks:
      - apilist_net
    secrets:
      - api_key
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16.8-alpine3.21
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: apilist
    volumes:
      - ./src/main/resources/db/startDB/01-createDB.sql:/docker-entrypoint-initdb.d/01-createDB.sql
      - ./src/main/resources/db/startDB/02-createTables.sql:/docker-entrypoint-initdb.d/02-createTables.sql
      - ./src/main/resources/db/startDB/03-insertData.sql:/docker-entrypoint-initdb.d/03-insertData.sql
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - apilist_net
  nginx:
    build: ./front/apilist-front
    ports:
      - 80:80
      - 8081:8081
    depends_on:
      - api
#        condition: service_healthy
#        restart: true
    networks:
      - apilist_net

networks:
  apilist_net:
    driver: bridge

volumes:
  postgres_data:
    driver: local # Explicitly define the driver
secrets:
  api_key:
    file: api_key.txt
# docker compose up -d --build --remove-orphans
# docker compose up -d --build --remove-orphans
# docker compose up --scale api=2 -d --build --remove-orphans

# nslookup food-api-api-1.food-api_food_net
# docker logs containername >& logs/myFile.log
#APP_TOKEN=SEGREDO docker compose up -d --build --remove-orphans