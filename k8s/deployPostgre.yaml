apiVersion: v1
kind: Namespace
metadata:
  name: nsdatabase
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: nsdatabase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:16.8-alpine3.21
          resources:
            requests:
              memory: "128Mi"
          env:
            - name: POSTGRES_PASSWORD
              value: "1234"
            - name: POSTGRES_DB
              value: "apilist"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-init-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
      volumes:
        - name: db-init-scripts
          configMap:
            name: db-init-scripts
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: nsdatabase
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30003
  type: NodePort

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: nsdatabase
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Mi # Ajuste o tamanho conforme necess√°rio
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init-scripts
  namespace: nsdatabase
data:
  01-createDB.sql: |
    SELECT 'CREATE DATABASE apilist' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'apilist')\gexec
